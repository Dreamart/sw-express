<?php

namespace Proxies\__CG__\Oro\Bundle\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Oro\Bundle\UserBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'username', 'email', 'namePrefix', 'firstName', 'middleName', 'lastName', 'nameSuffix', 'groups', 'birthday', 'enabled', 'lastLogin', 'owner', 'apiKeys', 'statuses', 'currentStatus', 'emails', 'tags', 'businessUnits', 'emailOrigins', 'createdAt', 'updatedAt', 'currentOrganization', 'title', 'phone', 'googleId', 'avatar', 'ac_last_contact_date_out', 'ac_last_contact_date_in', 'ac_last_contact_date', 'ac_contact_count_out', 'ac_contact_count_in', 'ac_contact_count', 'password', 'plainPassword', 'salt', 'loginCount', 'roles', 'confirmationToken', 'organizations', 'organization', 'passwordRequestedAt', 'passwordChangedAt');
        }

        return array('__isInitialized__', 'id', 'username', 'email', 'namePrefix', 'firstName', 'middleName', 'lastName', 'nameSuffix', 'groups', 'birthday', 'enabled', 'lastLogin', 'owner', 'apiKeys', 'statuses', 'currentStatus', 'emails', 'tags', 'businessUnits', 'emailOrigins', 'createdAt', 'updatedAt', 'currentOrganization', 'title', 'phone', 'googleId', 'avatar', 'ac_last_contact_date_out', 'ac_last_contact_date_in', 'ac_last_contact_date', 'ac_contact_count_out', 'ac_contact_count_in', 'ac_contact_count', 'password', 'plainPassword', 'salt', 'loginCount', 'roles', 'confirmationToken', 'organizations', 'organization', 'passwordRequestedAt', 'passwordChangedAt');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClass', array());

        return parent::getClass();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailFields', array());

        return parent::getEmailFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($lastName));

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getMiddleName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMiddleName', array());

        return parent::getMiddleName();
    }

    /**
     * {@inheritDoc}
     */
    public function setMiddleName($middleName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMiddleName', array($middleName));

        return parent::setMiddleName($middleName);
    }

    /**
     * {@inheritDoc}
     */
    public function getNamePrefix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNamePrefix', array());

        return parent::getNamePrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function setNamePrefix($namePrefix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNamePrefix', array($namePrefix));

        return parent::setNamePrefix($namePrefix);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameSuffix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameSuffix', array());

        return parent::getNameSuffix();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameSuffix($nameSuffix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameSuffix', array($nameSuffix));

        return parent::setNameSuffix($nameSuffix);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthday()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthday', array());

        return parent::getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthday(\DateTime $birthday = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthday', array($birthday));

        return parent::setBirthday($birthday);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiKeys()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiKeys', array());

        return parent::getApiKeys();
    }

    /**
     * {@inheritDoc}
     */
    public function addApiKey(\Oro\Bundle\UserBundle\Entity\UserApi $api)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addApiKey', array($api));

        return parent::addApiKey($api);
    }

    /**
     * {@inheritDoc}
     */
    public function removeApiKey(\Oro\Bundle\UserBundle\Entity\UserApi $api)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeApiKey', array($api));

        return parent::removeApiKey($api);
    }

    /**
     * {@inheritDoc}
     */
    public function getRolesCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolesCollection', array());

        return parent::getRolesCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function setRolesCollection($collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRolesCollection', array($collection));

        return parent::setRolesCollection($collection);
    }

    /**
     * {@inheritDoc}
     */
    public function beforeSave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'beforeSave', array());

        return parent::beforeSave();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\Doctrine\ORM\Event\PreUpdateEventArgs $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', array($event));

        return parent::preUpdate($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatuses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatuses', array());

        return parent::getStatuses();
    }

    /**
     * {@inheritDoc}
     */
    public function addStatus(\Oro\Bundle\UserBundle\Entity\Status $status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStatus', array($status));

        return parent::addStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentStatus', array());

        return parent::getCurrentStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentStatus(\Oro\Bundle\UserBundle\Entity\Status $status = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentStatus', array($status));

        return parent::setCurrentStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmails', array());

        return parent::getEmails();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmail(\Oro\Bundle\UserBundle\Entity\Email $email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmail', array($email));

        return parent::addEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmail(\Oro\Bundle\UserBundle\Entity\Email $email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmail', array($email));

        return parent::removeEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaggableId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaggableId', array());

        return parent::getTaggableId();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', array());

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setTags($tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', array($tags));

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function addBusinessUnit(\Oro\Bundle\OrganizationBundle\Entity\BusinessUnit $businessUnit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBusinessUnit', array($businessUnit));

        return parent::addBusinessUnit($businessUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function getBusinessUnits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBusinessUnits', array());

        return parent::getBusinessUnits();
    }

    /**
     * {@inheritDoc}
     */
    public function setBusinessUnits(\Doctrine\Common\Collections\Collection $businessUnits)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBusinessUnits', array($businessUnits));

        return parent::setBusinessUnits($businessUnits);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBusinessUnit(\Oro\Bundle\OrganizationBundle\Entity\BusinessUnit $businessUnit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBusinessUnit', array($businessUnit));

        return parent::removeBusinessUnit($businessUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owningBusinessUnit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owningBusinessUnit));

        return parent::setOwner($owningBusinessUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotificationEmails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotificationEmails', array());

        return parent::getNotificationEmails();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function setImapConfiguration(\Oro\Bundle\ImapBundle\Entity\UserEmailOrigin $imapConfiguration = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImapConfiguration', array($imapConfiguration));

        return parent::setImapConfiguration($imapConfiguration);
    }

    /**
     * {@inheritDoc}
     */
    public function getImapConfiguration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImapConfiguration', array());

        return parent::getImapConfiguration();
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmailOrigin(\Oro\Bundle\EmailBundle\Entity\EmailOrigin $emailOrigin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmailOrigin', array($emailOrigin));

        return parent::removeEmailOrigin($emailOrigin);
    }

    /**
     * {@inheritDoc}
     */
    public function addEmailOrigin(\Oro\Bundle\EmailBundle\Entity\EmailOrigin $emailOrigin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmailOrigin', array($emailOrigin));

        return parent::addEmailOrigin($emailOrigin);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailOrigins()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailOrigins', array());

        return parent::getEmailOrigins();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', array());

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function hasGroup($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasGroup', array($name));

        return parent::hasGroup($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNames', array());

        return parent::getGroupNames();
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup(\Oro\Bundle\UserBundle\Entity\Group $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', array($group));

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\Oro\Bundle\UserBundle\Entity\Group $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', array($group));

        return parent::removeGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentOrganization(\Oro\Bundle\OrganizationBundle\Entity\OrganizationInterface $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentOrganization', array($organization));

        return parent::setCurrentOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentOrganization', array());

        return parent::getCurrentOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($value));

        return parent::setTitle($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($value));

        return parent::setPhone($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setGoogleId($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoogleId', array($value));

        return parent::setGoogleId($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', array($value));

        return parent::setAvatar($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcLastContactDateOut($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcLastContactDateOut', array($value));

        return parent::setAcLastContactDateOut($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcLastContactDateIn($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcLastContactDateIn', array($value));

        return parent::setAcLastContactDateIn($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcLastContactDate($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcLastContactDate', array($value));

        return parent::setAcLastContactDate($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcContactCountOut($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcContactCountOut', array($value));

        return parent::setAcContactCountOut($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcContactCountIn($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcContactCountIn', array($value));

        return parent::setAcContactCountIn($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcContactCount($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcContactCount', array($value));

        return parent::setAcContactCount($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function getGoogleId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoogleId', array());

        return parent::getGoogleId();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatar', array());

        return parent::getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcLastContactDateOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcLastContactDateOut', array());

        return parent::getAcLastContactDateOut();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcLastContactDateIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcLastContactDateIn', array());

        return parent::getAcLastContactDateIn();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcLastContactDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcLastContactDate', array());

        return parent::getAcLastContactDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcContactCountOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcContactCountOut', array());

        return parent::getAcContactCountOut();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcContactCountIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcContactCountIn', array());

        return parent::getAcContactCountIn();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcContactCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcContactCount', array());

        return parent::getAcContactCount();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', array());

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', array($serialized));

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', array());

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin(\DateTime $time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', array($time));

        return parent::setLastLogin($time);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoginCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoginCount', array());

        return parent::getLoginCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setLoginCount($count)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoginCount', array($count));

        return parent::setLoginCount($count);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', array($salt));

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', array());

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', array($password));

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', array());

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', array());

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', array());

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', array($enabled));

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($role));

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole($roleName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', array($roleName));

        return parent::getRole($roleName);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', array($roles));

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\Symfony\Component\Security\Core\Role\RoleInterface $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($role));

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', array($role));

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', array());

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrganization(\Oro\Bundle\OrganizationBundle\Entity\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrganization', array($organization));

        return parent::addOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function hasOrganization(\Oro\Bundle\OrganizationBundle\Entity\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasOrganization', array($organization));

        return parent::hasOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizations($onlyActive = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizations', array($onlyActive));

        return parent::getOrganizations($onlyActive);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizations(\Doctrine\Common\Collections\Collection $organizations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizations', array($organizations));

        return parent::setOrganizations($organizations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrganization(\Oro\Bundle\OrganizationBundle\Entity\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrganization', array($organization));

        return parent::removeOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', array());

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\OrganizationInterface $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', array($organization));

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmationToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmationToken', array());

        return parent::getConfirmationToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmationToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmationToken', array($token));

        return parent::setConfirmationToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function generateToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateToken', array());

        return parent::generateToken();
    }

    /**
     * {@inheritDoc}
     */
    public function isPasswordRequestNonExpired($ttl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPasswordRequestNonExpired', array($ttl));

        return parent::isPasswordRequestNonExpired($ttl);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordRequestedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordRequestedAt', array());

        return parent::getPasswordRequestedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordRequestedAt(\DateTime $time = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordRequestedAt', array($time));

        return parent::setPasswordRequestedAt($time);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordChangedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordChangedAt', array());

        return parent::getPasswordChangedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordChangedAt(\DateTime $time = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordChangedAt', array($time));

        return parent::setPasswordChangedAt($time);
    }

}
